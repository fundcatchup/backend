type Group {
	id: GroupId!
	name: String!
	type: GroupType
	"""
	Group Cover Picture in base64 format
	"""
	pic: String
	members: [UserId!]!
}

scalar GroupId

enum GroupType {
	FRIENDS
	TRIP
	HOME
	COUPLE
	OTHER
}



type Mutation {
	createGroup(newGroup: NewGroup!): Group!
}

input NewGroup {
	name: String!
	type: GroupType
	"""
	Group Cover Picture in base64 format
	"""
	pic: String
	members: [UserId!]!
}

type Query {
	whoami: String
}


scalar UserId

extend schema @link(
	url: "https://specs.apollo.dev/federation/v2.3",
	import: ["@key", "@tag", "@shareable", "@inaccessible", "@override", "@external", "@provides", "@requires", "@composeDirective", "@interfaceObject"]
)
directive @include(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
directive @skip(if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
